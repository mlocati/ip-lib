<?php

namespace IPLib\Test\Addresses;

use IPLib\Factory;
use IPLib\Test\TestCase;

class ShiftTest extends TestCase
{
    public function provideRightShiftCases()
    {
        return array(
            array('0.0.0.0', 0, '0.0.0.0'),
            array('0.0.0.0', 1, '0.0.0.0'),
            array('0.0.0.0', 7, '0.0.0.0'),
            array('0.0.0.0', 8, '0.0.0.0'),
            array('0.0.0.0', 9, '0.0.0.0'),
            array('0.0.0.0', 15, '0.0.0.0'),
            array('0.0.0.0', 16, '0.0.0.0'),
            array('0.0.0.0', 17, '0.0.0.0'),
            array('0.0.0.0', 23, '0.0.0.0'),
            array('0.0.0.0', 24, '0.0.0.0'),
            array('0.0.0.0', 25, '0.0.0.0'),
            array('0.0.0.0', 28, '0.0.0.0'),
            array('0.0.0.0', 31, '0.0.0.0'),
            array('0.0.0.0', 32, '0.0.0.0'),
            array('0.0.0.0', 33, '0.0.0.0'),

            array('0.0.0.1', 0, '0.0.0.1'),
            array('0.0.0.1', 1, '0.0.0.0'),
            array('0.0.0.1', 7, '0.0.0.0'),
            array('0.0.0.1', 8, '0.0.0.0'),
            array('0.0.0.1', 9, '0.0.0.0'),
            array('0.0.0.1', 15, '0.0.0.0'),
            array('0.0.0.1', 16, '0.0.0.0'),
            array('0.0.0.1', 17, '0.0.0.0'),
            array('0.0.0.1', 23, '0.0.0.0'),
            array('0.0.0.1', 24, '0.0.0.0'),
            array('0.0.0.1', 25, '0.0.0.0'),
            array('0.0.0.1', 28, '0.0.0.0'),
            array('0.0.0.1', 31, '0.0.0.0'),
            array('0.0.0.1', 32, '0.0.0.0'),
            array('0.0.0.1', 33, '0.0.0.0'),

            array('1.2.3.0', 0, '1.2.3.0'),
            array('1.2.3.0', 1, '0.129.1.128'),
            array('1.2.3.0', 7, '0.2.4.6'),
            array('1.2.3.0', 8, '0.1.2.3'),
            array('1.2.3.0', 9, '0.0.129.1'),
            array('1.2.3.0', 15, '0.0.2.4'),
            array('1.2.3.0', 16, '0.0.1.2'),
            array('1.2.3.0', 17, '0.0.0.129'),
            array('1.2.3.0', 23, '0.0.0.2'),
            array('1.2.3.0', 24, '0.0.0.1'),
            array('1.2.3.0', 25, '0.0.0.0'),
            array('1.2.3.0', 28, '0.0.0.0'),
            array('1.2.3.0', 31, '0.0.0.0'),
            array('1.2.3.0', 32, '0.0.0.0'),
            array('1.2.3.0', 33, '0.0.0.0'),

            array('254.253.252.251', 0, '254.253.252.251'),
            array('254.253.252.251', 1, '127.126.254.125'),
            array('254.253.252.251', 7, '1.253.251.249'),
            array('254.253.252.251', 8, '0.254.253.252'),
            array('254.253.252.251', 9, '0.127.126.254'),
            array('254.253.252.251', 15, '0.1.253.251'),
            array('254.253.252.251', 16, '0.0.254.253'),
            array('254.253.252.251', 17, '0.0.127.126'),
            array('254.253.252.251', 23, '0.0.1.253'),
            array('254.253.252.251', 24, '0.0.0.254'),
            array('254.253.252.251', 25, '0.0.0.127'),
            array('254.253.252.251', 28, '0.0.0.15'),
            array('254.253.252.251', 31, '0.0.0.1'),
            array('254.253.252.251', 32, '0.0.0.0'),
            array('254.253.252.251', 33, '0.0.0.0'),

            array('::', 0, '::'),
            array('::', 1, '::'),
            array('::', 15, '::'),
            array('::', 16, '::'),
            array('::', 17, '::'),
            array('::', 119, '::'),
            array('::', 120, '::'),
            array('::', 121, '::'),
            array('::', 127, '::'),
            array('::', 128, '::'),
            array('::', 129, '::'),

            array('::1', 0, '::1'),
            array('::1', 1, '::'),
            array('::1', 15, '::'),
            array('::1', 16, '::'),
            array('::1', 17, '::'),
            array('::1', 119, '::'),
            array('::1', 120, '::'),
            array('::1', 121, '::'),
            array('::1', 127, '::'),
            array('::1', 128, '::'),
            array('::1', 129, '::'),

            array('::1:203', 0, '::1:203'),
            array('::1:203', 1, '::8101'),
            array('::1:203', 2, '::4080'),
            array('::1:203', 3, '::2040'),
            array('::1:203', 4, '::1020'),
            array('::1:203', 5, '::810'),
            array('::1:203', 6, '::408'),
            array('::1:203', 7, '::204'),
            array('::1:203', 8, '::102'),
            array('::1:203', 9, '::81'),
            array('::1:203', 10, '::40'),
            array('::1:203', 11, '::20'),
            array('::1:203', 12, '::10'),
            array('::1:203', 13, '::8'),
            array('::1:203', 14, '::4'),
            array('::1:203', 15, '::2'),
            array('::1:203', 16, '::1'),
            array('::1:203', 17, '::'),
            array('::1:203', 18, '::'),
            array('::1:203', 119, '::'),
            array('::1:203', 120, '::'),
            array('::1:203', 121, '::'),
            array('::1:203', 127, '::'),
            array('::1:203', 128, '::'),
            array('::1:203', 129, '::'),

            array('fffe::1:203', 0, 'fffe::1:203'),
            array('fffe::1:203', 1, '7fff::8101'),
            array('fffe::1:203', 2, '3fff:8000::4080'),
            array('fffe::1:203', 3, '1fff:c000::2040'),
            array('fffe::1:203', 8, 'ff:fe00::102'),
            array('fffe::1:203', 16, '0:fffe::1'),
            array('fffe::1:203', 24, '0:ff:fe00::'),
            array('fffe::1:203', 32, '0:0:fffe::'),
            array('fffe::1:203', 40, '0:0:ff:fe00::'),
            array('fffe::1:203', 48, '0:0:0:fffe::'),
            array('fffe::1:203', 56, '::ff:fe00:0:0:0'),
            array('fffe::1:203', 64, '::fffe:0:0:0'),
            array('fffe::1:203', 72, '::ff:fe00:0:0'),
            array('fffe::1:203', 80, '::fffe:0:0'),
            array('fffe::1:203', 88, '::ff:fe00:0'),
            array('fffe::1:203', 96, '::fffe:0'),
            array('fffe::1:203', 104, '::ff:fe00'),
            array('fffe::1:203', 112, '::fffe'),
            array('fffe::1:203', 120, '::ff'),
            array('fffe::1:203', 127, '::1'),
            array('fffe::1:203', 128, '::'),
            array('fffe::1:203', 129, '::'),
        );
    }

    /**
     * @dataProvider provideRightShiftCases
     *
     * @param string $address
     * @param int $bits
     * @param string $expected
     */
    public function testRightShift($address, $bits, $expected)
    {
        $ip = Factory::parseAddressString($address);
        $this->assertNotNull($ip, "'{$address}' has been detected as an invalid IP, but it should be valid");
        $shifted = $ip->shift($bits);
        $this->assertSame($expected, (string) $shifted);
    }

    public function provideLeftShiftCases()
    {
        return array(
            array('0.0.0.0', 0, '0.0.0.0'),
            array('0.0.0.0', 1, '0.0.0.0'),
            array('0.0.0.0', 7, '0.0.0.0'),
            array('0.0.0.0', 8, '0.0.0.0'),
            array('0.0.0.0', 9, '0.0.0.0'),
            array('0.0.0.0', 15, '0.0.0.0'),
            array('0.0.0.0', 16, '0.0.0.0'),
            array('0.0.0.0', 17, '0.0.0.0'),
            array('0.0.0.0', 23, '0.0.0.0'),
            array('0.0.0.0', 24, '0.0.0.0'),
            array('0.0.0.0', 25, '0.0.0.0'),
            array('0.0.0.0', 28, '0.0.0.0'),
            array('0.0.0.0', 31, '0.0.0.0'),
            array('0.0.0.0', 32, '0.0.0.0'),
            array('0.0.0.0', 33, '0.0.0.0'),

            array('0.0.0.1', 0, '0.0.0.1'),
            array('0.0.0.1', 1, '0.0.0.2'),
            array('0.0.0.1', 2, '0.0.0.4'),
            array('0.0.0.1', 3, '0.0.0.8'),
            array('0.0.0.1', 4, '0.0.0.16'),
            array('0.0.0.1', 5, '0.0.0.32'),
            array('0.0.0.1', 6, '0.0.0.64'),
            array('0.0.0.1', 7, '0.0.0.128'),
            array('0.0.0.1', 8, '0.0.1.0'),
            array('0.0.0.1', 9, '0.0.2.0'),
            array('0.0.0.1', 15, '0.0.128.0'),
            array('0.0.0.1', 16, '0.1.0.0'),
            array('0.0.0.1', 17, '0.2.0.0'),
            array('0.0.0.1', 23, '0.128.0.0'),
            array('0.0.0.1', 24, '1.0.0.0'),
            array('0.0.0.1', 25, '2.0.0.0'),
            array('0.0.0.1', 28, '16.0.0.0'),
            array('0.0.0.1', 31, '128.0.0.0'),
            array('0.0.0.1', 32, '0.0.0.0'),
            array('0.0.0.1', 33, '0.0.0.0'),

            array('1.2.3.0', 0, '1.2.3.0'),
            array('1.2.3.0', 1, '2.4.6.0'),
            array('1.2.3.0', 7, '129.1.128.0'),
            array('1.2.3.0', 8, '2.3.0.0'),
            array('1.2.3.0', 9, '4.6.0.0'),
            array('1.2.3.0', 15, '1.128.0.0'),
            array('1.2.3.0', 16, '3.0.0.0'),
            array('1.2.3.0', 17, '6.0.0.0'),
            array('1.2.3.0', 23, '128.0.0.0'),
            array('1.2.3.0', 24, '0.0.0.0'),
            array('1.2.3.0', 25, '0.0.0.0'),
            array('1.2.3.0', 28, '0.0.0.0'),
            array('1.2.3.0', 31, '0.0.0.0'),
            array('1.2.3.0', 32, '0.0.0.0'),
            array('1.2.3.0', 33, '0.0.0.0'),

            array('254.253.252.251', 0, '254.253.252.251'),
            array('254.253.252.251', 1, '253.251.249.246'),
            array('254.253.252.251', 7, '126.254.125.128'),
            array('254.253.252.251', 8, '253.252.251.0'),
            array('254.253.252.251', 9, '251.249.246.0'),
            array('254.253.252.251', 15, '254.125.128.0'),
            array('254.253.252.251', 16, '252.251.0.0'),
            array('254.253.252.251', 17, '249.246.0.0'),
            array('254.253.252.251', 23, '125.128.0.0'),
            array('254.253.252.251', 24, '251.0.0.0'),
            array('254.253.252.251', 25, '246.0.0.0'),
            array('254.253.252.251', 28, '176.0.0.0'),
            array('254.253.252.251', 31, '128.0.0.0'),
            array('254.253.252.251', 32, '0.0.0.0'),
            array('254.253.252.251', 33, '0.0.0.0'),

            array('::', 0, '::'),
            array('::', 1, '::'),
            array('::', 15, '::'),
            array('::', 16, '::'),
            array('::', 17, '::'),
            array('::', 119, '::'),
            array('::', 120, '::'),
            array('::', 121, '::'),
            array('::', 127, '::'),
            array('::', 128, '::'),
            array('::', 129, '::'),

            array('::1', 0, '::1'),
            array('::1', 1, '::2'),
            array('::1', 2, '::4'),
            array('::1', 3, '::8'),
            array('::1', 4, '::10'),
            array('::1', 5, '::20'),
            array('::1', 6, '::40'),
            array('::1', 7, '::80'),
            array('::1', 8, '::100'),
            array('::1', 9, '::200'),
            array('::1', 10, '::400'),
            array('::1', 11, '::800'),
            array('::1', 12, '::1000'),
            array('::1', 13, '::2000'),
            array('::1', 14, '::4000'),
            array('::1', 15, '::8000'),
            array('::1', 16, '::1:0'),
            array('::1', 17, '::2:0'),
            array('::1', 119, '80::'),
            array('::1', 120, '100::'),
            array('::1', 121, '200::'),
            array('::1', 127, '8000::'),
            array('::1', 128, '::'),
            array('::1', 129, '::'),

            array('::1:203', 0, '::1:203'),
            array('::1:203', 1, '::2:406'),
            array('::1:203', 2, '::4:80c'),
            array('::1:203', 3, '::8:1018'),
            array('::1:203', 4, '::10:2030'),
            array('::1:203', 5, '::20:4060'),
            array('::1:203', 6, '::40:80c0'),
            array('::1:203', 7, '::81:180'),
            array('::1:203', 8, '::102:300'),
            array('::1:203', 9, '::204:600'),
            array('::1:203', 10, '::408:c00'),
            array('::1:203', 11, '::810:1800'),
            array('::1:203', 12, '::1020:3000'),
            array('::1:203', 16, '::1:203:0'),
            array('::1:203', 20, '::10:2030:0'),
            array('::1:203', 119, '180::'),
            array('::1:203', 120, '300::'),
            array('::1:203', 121, '600::'),
            array('::1:203', 127, '8000::'),
            array('::1:203', 128, '::'),
            array('::1:203', 129, '::'),

            array('fffe::1:203', 0, 'fffe::1:203'),
            array('fffe::1:203', 1, 'fffc::2:406'),
            array('fffe::1:203', 2, 'fff8::4:80c'),
            array('fffe::1:203', 3, 'fff0::8:1018'),
            array('fffe::1:203', 8, 'fe00::102:300'),
            array('fffe::1:203', 12, 'e000::1020:3000'),
            array('fffe::1:203', 16, '::1:203:0'),
            array('fffe::1:203', 24, '::102:300:0'),
            array('fffe::1:203', 32, '::1:203:0:0'),
            array('fffe::1:203', 40, '::102:300:0:0'),
            array('fffe::1:203', 48, '::1:203:0:0:0'),
            array('fffe::1:203', 56, '::102:300:0:0:0'),
            array('fffe::1:203', 64, '0:0:1:203::'),
            array('fffe::1:203', 72, '0:0:102:300::'),
            array('fffe::1:203', 80, '0:1:203::'),
            array('fffe::1:203', 88, '0:102:300::'),
            array('fffe::1:203', 96, '1:203::'),
            array('fffe::1:203', 104, '102:300::'),
            array('fffe::1:203', 112, '203::'),
            array('fffe::1:203', 120, '300::'),
            array('fffe::1:203', 127, '8000::'),
            array('fffe::1:203', 128, '::'),
            array('fffe::1:203', 129, '::'),
        );
    }

    /**
     * @dataProvider provideLeftShiftCases
     *
     * @param string $address
     * @param int $bits
     * @param string $expected
     */
    public function testLeftShift($address, $bits, $expected)
    {
        $ip = Factory::parseAddressString($address);
        $this->assertNotNull($ip, "'{$address}' has been detected as an invalid IP, but it should be valid");
        $shifted = $ip->shift(-$bits);
        $this->assertSame($expected, (string) $shifted);
    }
}
